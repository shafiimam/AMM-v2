<div
  id="countdown"
  class="countdown-{{ block.id }}"
  data-date="{{ block.settings.final_date}}"
  data-time="{{ block.settings.final_time}}"
  {{ block.shopify_attributes }}
>
  <div class="day">
    <span class="num"></span>
    <span class="word"></span>
  </div>
  <div class="hour">
    <span class="num"></span>
    <span class="word"></span>
  </div>
  <div class="min">
    <span class="num"></span>
    <span class="word"></span>
  </div>
  <div class="sec">
    <span class="num"></span>
    <span class="word"></span>
  </div>
</div>
{% if block.settigns.start_countdown %}
  <script>
    var shouldStartCoundDonw = true;
  </script>
{% endif %}
<style>
  div#countdown {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 30px;
  }
  div#countdown .day {
    margin-block-start: 1.25rem !important;
  }
  .day,
  .hour,
  .min,
  .sec {
    display: flex;
    flex-direction: column;
  }
  div#countdown .num {
    font-size: 2rem !important;
  }
</style>
<script>
  const countdownTimer = (elem) => document.querySelector(elem);

  const countdown = function (_config) {
    const tarDate = countdownTimer(_config.target).getAttribute('data-date').split('-');
    const day = parseInt(tarDate[0]);
    const month = parseInt(tarDate[1]);
    const year = parseInt(tarDate[2]);
    let tarTime = countdownTimer(_config.target).getAttribute('data-time');
    let tarhour, tarmin;

    if (tarTime != null) {
      tarTime = tarTime.split(':');
      tarhour = parseInt(tarTime[0]);
      tarmin = parseInt(tarTime[1]);
    }

    let months = [31, new Date().getFullYear() % 4 == 0 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    let dateNow = new Date();
    let dayNow = dateNow.getDate();
    let monthNow = dateNow.getMonth() + 1;
    let yearNow = dateNow.getFullYear();
    let hourNow = dateNow.getHours();
    let minNow = dateNow.getMinutes();
    let count_day = 0,
      count_hour = 0,
      count_min = 0;
    let count_day_isSet = false;
    let isOver = false;

    // Set the date we're counting down to
    const countDownDate = new Date(year, month - 1, day, tarhour, tarmin, 0, 0).getTime();

    countdownTimer(_config.target + ' .day .word').innerHTML = _config.dayWord;
    countdownTimer(_config.target + ' .hour .word').innerHTML = _config.hourWord;
    countdownTimer(_config.target + ' .min .word').innerHTML = _config.minWord;
    countdownTimer(_config.target + ' .sec .word').innerHTML = _config.secWord;

    const updateTime = () => {
      // Get todays date and time
      const now = new Date().getTime();

      // Find the distance between now an the count down date
      const distance = countDownDate - now;

      // Time calculations for days, hours, minutes and seconds
      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);

      requestAnimationFrame(updateTime);

      countdownTimer(_config.target + ' .day .num').innerHTML = addZero(days);
      countdownTimer(_config.target + ' .hour .num').innerHTML = addZero(hours);
      countdownTimer(_config.target + ' .min .num').innerHTML = addZero(minutes);
      countdownTimer(_config.target + ' .sec .num').innerHTML = addZero(seconds);

      // If the count down is over, write some text
      if (distance < 0) {
        countdownTimer('.countdown').innerHTML = 'EXPIRED';
      }
    };

    updateTime();
  };

  const addZero = (x) => (x < 10 && x >= 0 ? '0' + x : x);
  var countDate = new countdown({
    target: '.countdown-{{ block.id }}',
    dayWord: ' days',
    hourWord: ' hours',
    minWord: ' mins',
    secWord: ' secs',
  });
</script>
